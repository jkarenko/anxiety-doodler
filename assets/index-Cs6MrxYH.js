var c=Object.defineProperty;var d=(r,t,e)=>t in r?c(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var a=(r,t,e)=>d(r,typeof t!="symbol"?t+"":t,e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const n of i)if(n.type==="childList")for(const o of n.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function e(i){const n={};return i.integrity&&(n.integrity=i.integrity),i.referrerPolicy&&(n.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?n.credentials="include":i.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function s(i){if(i.ep)return;i.ep=!0;const n=e(i);fetch(i.href,n)}})();class l{constructor(){a(this,"isDrawingActive",!1);a(this,"currentDestructionMethod","none");a(this,"isAnimating",!1)}isDrawing(){return this.isDrawingActive}setDrawing(t){this.isDrawingActive=t}getDestructionMethod(){return this.currentDestructionMethod}setDestructionMethod(t){this.currentDestructionMethod=t}isAnimationPlaying(){return this.isAnimating}setAnimating(t){this.isAnimating=t}reset(){this.isDrawingActive=!1,this.currentDestructionMethod="none",this.isAnimating=!1}}class u{constructor(t){a(this,"canvas");a(this,"ctx");a(this,"container");this.container=t,this.canvas=document.createElement("canvas"),this.canvas.className="drawing-canvas",t.appendChild(this.canvas);const e=this.canvas.getContext("2d");if(!e)throw new Error("Could not get 2D context from canvas");this.ctx=e,this.resizeCanvas(),window.addEventListener("resize",this.resizeCanvas.bind(this))}resizeCanvas(){const t=window.innerWidth<=768;let e,s;t?(e=this.container.clientWidth*.95,s=this.container.clientHeight*.7):(e=Math.min(800,this.container.clientWidth*.8),s=Math.min(600,this.container.clientHeight*.8)),this.canvas.width=e,this.canvas.height=s,this.canvas.style.width=`${e}px`,this.canvas.style.height=`${s}px`,this.ctx.setTransform(1,0,0,1,0,0),this.ctx.lineJoin="round",this.ctx.lineCap="round",this.ctx.lineWidth=5,this.ctx.strokeStyle="#000000"}getElement(){return this.canvas}getContext(){return this.ctx}getWidth(){return this.canvas.width}getHeight(){return this.canvas.height}clear(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height)}}class g{constructor(){a(this,"paths",[]);a(this,"currentPath",null);a(this,"lineWidth",5);a(this,"lineColor","#000000")}startPath(t,e){this.currentPath={points:[{x:t,y:e}],color:this.lineColor,width:this.lineWidth},this.paths.push(this.currentPath)}addPoint(t,e){if(!this.currentPath){this.startPath(t,e);return}this.currentPath.points.push({x:t,y:e})}endPath(){this.currentPath=null}getPaths(){return this.paths}clearPaths(){this.paths=[],this.currentPath=null}setLineWidth(t){this.lineWidth=t}getLineWidth(){return this.lineWidth}setLineColor(t){this.lineColor=t}getLineColor(){return this.lineColor}}class m{constructor(t){a(this,"ctx");this.ctx=t}clear(){const t=this.ctx.canvas;this.ctx.clearRect(0,0,t.width,t.height)}drawPath(t){const{points:e,color:s,width:i}=t;if(e.length<2){if(e.length===1){const n=e[0];this.ctx.beginPath(),this.ctx.arc(n.x,n.y,i/2,0,Math.PI*2),this.ctx.fillStyle=s,this.ctx.fill()}return}this.ctx.strokeStyle=s,this.ctx.lineWidth=i,this.ctx.lineJoin="round",this.ctx.lineCap="round",this.ctx.beginPath(),this.ctx.moveTo(e[0].x,e[0].y);for(let n=1;n<e.length;n++)this.ctx.lineTo(e[n].x,e[n].y);this.ctx.stroke()}drawDoodle(t){for(const e of t)this.drawPath(e)}getContext(){return this.ctx}setContext(t){this.ctx=t}}class f{constructor(t){a(this,"gameState");a(this,"canvas");a(this,"doodleManager");a(this,"renderer");a(this,"animationFrameId",null);this.gameState=new l,this.canvas=new u(t),this.doodleManager=new g,this.renderer=new m(this.canvas.getContext()),this.setupEventListeners()}setupEventListeners(){const t=this.canvas.getElement();t.addEventListener("mousedown",this.handlePointerStart.bind(this)),t.addEventListener("mousemove",this.handlePointerMove.bind(this)),t.addEventListener("mouseup",this.handlePointerEnd.bind(this)),t.addEventListener("mouseout",this.handlePointerEnd.bind(this)),t.addEventListener("touchstart",this.handleTouchStart.bind(this)),t.addEventListener("touchmove",this.handleTouchMove.bind(this)),t.addEventListener("touchend",this.handleTouchEnd.bind(this))}handlePointerStart(t){t.preventDefault();const{offsetX:e,offsetY:s}=t;this.gameState.setDrawing(!0),this.doodleManager.startPath(e,s)}handlePointerMove(t){if(!this.gameState.isDrawing())return;const{offsetX:e,offsetY:s}=t;this.doodleManager.addPoint(e,s),this.render()}handlePointerEnd(t){t.preventDefault(),this.gameState.setDrawing(!1),this.doodleManager.endPath()}handleTouchStart(t){if(t.preventDefault(),t.touches.length!==1)return;const e=t.touches[0],s=this.canvas.getElement().getBoundingClientRect(),i=e.clientX-s.left,n=e.clientY-s.top;this.gameState.setDrawing(!0),this.doodleManager.startPath(i,n)}handleTouchMove(t){if(t.preventDefault(),!this.gameState.isDrawing()||t.touches.length!==1)return;const e=t.touches[0],s=this.canvas.getElement().getBoundingClientRect(),i=e.clientX-s.left,n=e.clientY-s.top;this.doodleManager.addPoint(i,n),this.render()}handleTouchEnd(t){t.preventDefault(),this.gameState.setDrawing(!1),this.doodleManager.endPath()}render(){this.renderer.clear(),this.renderer.drawDoodle(this.doodleManager.getPaths())}gameLoop(){this.render(),this.animationFrameId=requestAnimationFrame(this.gameLoop.bind(this))}start(){this.gameLoop()}stop(){this.animationFrameId!==null&&(cancelAnimationFrame(this.animationFrameId),this.animationFrameId=null)}}const h=document.getElementById("canvas-container");h?new f(h).start():console.error("Canvas container not found!");
